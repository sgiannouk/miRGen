# Generated by Django 5.2.4 on 2025-08-02 10:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpressionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tissue', models.CharField(max_length=100)),
                ('condition', models.CharField(blank=True, max_length=100)),
                ('expression_level', models.FloatField()),
                ('expression_unit', models.CharField(default='TPM', max_length=20)),
                ('sample_count', models.IntegerField(default=1)),
                ('study_reference', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-expression_level'],
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('symbol', models.CharField(blank=True, max_length=20)),
                ('chromosome', models.CharField(blank=True, max_length=20)),
                ('start_position', models.IntegerField(blank=True, null=True)),
                ('end_position', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('gene_type', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MiRNA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('sequence', models.TextField()),
                ('family', models.CharField(blank=True, max_length=100)),
                ('chromosome', models.CharField(blank=True, max_length=20)),
                ('strand', models.CharField(blank=True, choices=[('+', 'Plus'), ('-', 'Minus')], max_length=1)),
                ('start_position', models.IntegerField(blank=True, null=True)),
                ('end_position', models.IntegerField(blank=True, null=True)),
                ('precursor_sequence', models.TextField(blank=True)),
                ('mature_sequence', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'miRNA',
                'verbose_name_plural': 'miRNAs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MiRNATarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_score', models.FloatField(blank=True, null=True)),
                ('binding_sites', models.TextField(blank=True)),
                ('experimental_validation', models.BooleanField(default=False)),
                ('validation_method', models.CharField(blank=True, max_length=100)),
                ('reference', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targeted_by', to='core.gene')),
                ('mirna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='core.mirna')),
            ],
            options={
                'ordering': ['-prediction_score'],
                'unique_together': {('mirna', 'gene')},
            },
        ),
        migrations.CreateModel(
            name='Pathway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('pathway_id', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('source_database', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('genes', models.ManyToManyField(related_name='pathways', to='core.gene')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=500)),
                ('search_type', models.CharField(choices=[('mirna', 'miRNA Name'), ('gene', 'Target Gene'), ('sequence', 'Sequence'), ('pathway', 'Pathway')], max_length=20)),
                ('results_count', models.IntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('scientific_name', models.CharField(max_length=200)),
                ('taxonomy_id', models.IntegerField(unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Species',
                'ordering': ['name'],
            },
        ),
        migrations.DeleteModel(
            name='Example',
        ),
        migrations.AddField(
            model_name='expressiondata',
            name='mirna',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expression_data', to='core.mirna'),
        ),
        migrations.AddField(
            model_name='mirna',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mirnas', to='core.species'),
        ),
        migrations.AddField(
            model_name='gene',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genes', to='core.species'),
        ),
        migrations.AlterUniqueTogether(
            name='expressiondata',
            unique_together={('mirna', 'tissue', 'condition')},
        ),
    ]
